functionality:
  name: "msdial_gcms"
  namespace: "msdial"
  version: "main_build"
  authors:
  - name: "Robrecht Cannoodt"
    email: "rcannood@gmail.com"
    roles:
    - "maintainer"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  inputs:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "One or more ABF files. Can also be a directory of ABF files."
    example:
    - "input.abf"
    default: []
    must_exist: false
    required: true
    direction: "input"
    multiple: true
    multiple_sep: ":"
  outputs:
  - type: "file"
    name: "--output"
    alternatives: []
    description: "An output directory to store the '*.mdsdial' outputs."
    example:
    - "output_dir"
    default: []
    must_exist: false
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "One or more ABF files. Can also be a directory of ABF files."
    example:
    - "input.abf"
    default: []
    must_exist: false
    required: true
    direction: "input"
    multiple: true
    multiple_sep: ":"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "An output directory to store the '*.mdsdial' outputs."
    example:
    - "output_dir"
    default: []
    must_exist: false
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--data_type"
    alternatives: []
    example: []
    default:
    - "Centroid"
    required: false
    choices:
    - "Centroid"
    - "Profile"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--ion_mode"
    alternatives: []
    example: []
    default:
    - "Positive"
    required: false
    choices:
    - "Positive"
    - "Negative"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--accuracy_type"
    alternatives: []
    example: []
    default:
    - "IsNominal"
    required: false
    choices:
    - "IsNominal"
    - "IsAccurate"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--retention_time_begin"
    alternatives: []
    example: []
    default:
    - 0
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--retention_time_end"
    alternatives: []
    example: []
    default:
    - 25
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--mass_range_begin"
    alternatives: []
    example: []
    default:
    - 0
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--mass_range_end"
    alternatives: []
    example: []
    default:
    - 1000
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--smoothing_method"
    alternatives: []
    example: []
    default:
    - "LinearWeightedMovingAverage"
    required: false
    choices:
    - "SimpleMovingAverage"
    - "LinearWeightedMovingAverage"
    - "SavitzkyGolayFilter"
    - "BinomialFilter"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--smoothing_level"
    alternatives: []
    example: []
    default:
    - 3
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--average_peak_width"
    alternatives: []
    example: []
    default:
    - 20
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--minimum_peak_height"
    alternatives: []
    example: []
    default:
    - 1000
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--mass_slice_width"
    alternatives: []
    example: []
    default:
    - 0.1
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--mass_accuracy"
    alternatives: []
    example: []
    default:
    - 0.025
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--sigma_window_value"
    alternatives: []
    example: []
    default:
    - 0.5
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--amplitude_cutoff"
    alternatives: []
    example: []
    default:
    - 10
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "file"
    name: "--msp_file"
    alternatives: []
    example:
    - "file.msp"
    default: []
    must_exist: false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "file"
    name: "--ri_index_file"
    alternatives: []
    example:
    - "ri_index.txt"
    default: []
    must_exist: false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--retention_type"
    alternatives: []
    example: []
    default:
    - "RI"
    required: false
    choices:
    - "RI"
    - "RT"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--ri_compound"
    alternatives: []
    example: []
    default:
    - "Alkanes"
    required: false
    choices:
    - "Fames"
    - "Alkanes"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--retention_time_tolerance_for_identification"
    alternatives: []
    example: []
    default:
    - 0.5
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--retention_index_tolerance_for_identification"
    alternatives: []
    example: []
    default:
    - 20
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--ei_similarity_tolerance_for_identification"
    alternatives: []
    example: []
    default:
    - 70
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--identification_score_cutoff"
    alternatives: []
    example: []
    default:
    - 70
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "string"
    name: "--alignment_index_type"
    alternatives: []
    example: []
    default:
    - "RT"
    required: false
    choices:
    - "RI"
    - "RT"
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--retention_time_tolerance_for_alignment"
    alternatives: []
    example: []
    default:
    - 0.075
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--retention_index_tolerance_for_alignment"
    alternatives: []
    example: []
    default:
    - 20
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--ei_similarity_tolerance_for_alignment"
    alternatives: []
    example: []
    default:
    - 70
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--retention_time_factor_for_alignment"
    alternatives: []
    example: []
    default:
    - 0.5
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "double"
    name: "--ei_similarity_factor_for_alignment"
    alternatives: []
    example: []
    default:
    - 0.5
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "integer"
    name: "--peak_count_filter"
    alternatives: []
    example: []
    default:
    - 0
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
  - type: "boolean"
    name: "--qc_at_least_filter"
    alternatives: []
    example: []
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
  resources:
  - type: "bash_script"
    text: |
      #!/usr/bin/env bash
      
      # msdial_gcms main_build
      # 
      # This wrapper script is auto-generated by viash 0.5.13 and is thus a derivative
      # work thereof. This software comes with ABSOLUTELY NO WARRANTY from Data
      # Intuitive.
      # 
      # The component may contain files which fall under a different license. The
      # authors of this component should specify the license in the header of such
      # files, or include a separate license file detailing the licenses of all included
      # files.
      # 
      # Component authors:
      #  * Robrecht Cannoodt <rcannood@gmail.com> (maintainer) {github: rcannood, orcid:
      # 0000-0003-3641-729X}
      
      set -e
      
      if [ -z "$VIASH_TEMP" ]; then
        VIASH_TEMP=${VIASH_TEMP:-$VIASH_TMPDIR}
        VIASH_TEMP=${VIASH_TEMP:-$VIASH_TEMPDIR}
        VIASH_TEMP=${VIASH_TEMP:-$VIASH_TMP}
        VIASH_TEMP=${VIASH_TEMP:-$TMPDIR}
        VIASH_TEMP=${VIASH_TEMP:-$TMP}
        VIASH_TEMP=${VIASH_TEMP:-$TEMPDIR}
        VIASH_TEMP=${VIASH_TEMP:-$TEMP}
        VIASH_TEMP=${VIASH_TEMP:-/tmp}
      fi
      
      # define helper functions
      # ViashQuote: put quotes around non flag values
      # $1     : unquoted string
      # return : possibly quoted string
      # examples:
      #   ViashQuote --foo      # returns --foo
      #   ViashQuote bar        # returns 'bar'
      #   Viashquote --foo=bar  # returns --foo='bar'
      function ViashQuote {
        if [[ "$1" =~ ^-+[a-zA-Z0-9_\-]+=.+$ ]]; then
          echo "$1" | sed "s#=\(.*\)#='\1'#"
        elif [[ "$1" =~ ^-+[a-zA-Z0-9_\-]+$ ]]; then
          echo "$1"
        else
          echo "'$1'"
        fi
      }
      # ViashRemoveFlags: Remove leading flag
      # $1     : string with a possible leading flag
      # return : string without possible leading flag
      # examples:
      #   ViashRemoveFlags --foo=bar  # returns bar
      function ViashRemoveFlags {
        echo "$1" | sed 's/^--*[a-zA-Z0-9_\-]*=//'
      }
      # ViashSourceDir: return the path of a bash file, following symlinks
      # usage   : ViashSourceDir ${BASH_SOURCE[0]}
      # $1      : Should always be set to ${BASH_SOURCE[0]}
      # returns : The absolute path of the bash file
      function ViashSourceDir {
        SOURCE="$1"
        while [ -h "$SOURCE" ]; do
          DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
          SOURCE="$(readlink "$SOURCE")"
          [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
        done
        cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd
      }
      # see https://en.wikipedia.org/wiki/Syslog#Severity_level
      VIASH_LOGCODE_EMERGENCY=0
      VIASH_LOGCODE_ALERT=1
      VIASH_LOGCODE_CRITICAL=2
      VIASH_LOGCODE_ERROR=3
      VIASH_LOGCODE_WARNING=4
      VIASH_LOGCODE_NOTICE=5
      VIASH_LOGCODE_INFO=6
      VIASH_LOGCODE_DEBUG=7
      VIASH_VERBOSITY=$VIASH_LOGCODE_NOTICE
      
      # ViashLog: Log events depending on the verbosity level
      # usage: ViashLog 1 alert Oh no something went wrong!
      # $1: required verbosity level
      # $2: display tag
      # $3+: messages to display
      # stdout: Your input, prepended by '[$2] '.
      function ViashLog {
        local required_level="$1"
        local display_tag="$2"
        shift 2
        if [ $VIASH_VERBOSITY -ge $required_level ]; then
          echo "[$display_tag]" "$@"
        fi
      }
      
      # ViashEmergency: log events when the system is unstable
      # usage: ViashEmergency Oh no something went wrong.
      # stdout: Your input, prepended by '[emergency] '.
      function ViashEmergency {
        ViashLog $VIASH_LOGCODE_EMERGENCY emergency $@
      }
      
      # ViashAlert: log events when actions must be taken immediately (e.g. corrupted system database)
      # usage: ViashAlert Oh no something went wrong.
      # stdout: Your input, prepended by '[alert] '.
      function ViashAlert {
        ViashLog $VIASH_LOGCODE_ALERT alert $@
      }
      
      # ViashCritical: log events when a critical condition occurs
      # usage: ViashCritical Oh no something went wrong.
      # stdout: Your input, prepended by '[critical] '.
      function ViashCritical {
        ViashLog $VIASH_LOGCODE_CRITICAL critical $@
      }
      
      # ViashError: log events when an error condition occurs
      # usage: ViashError Oh no something went wrong.
      # stdout: Your input, prepended by '[error] '.
      function ViashError {
        ViashLog $VIASH_LOGCODE_ERROR error $@
      }
      
      # ViashWarning: log potentially abnormal events
      # usage: ViashWarning Something may have gone wrong.
      # stdout: Your input, prepended by '[warning] '.
      function ViashWarning {
        ViashLog $VIASH_LOGCODE_WARNING warning $@
      }
      
      # ViashNotice: log significant but normal events
      # usage: ViashNotice This just happened.
      # stdout: Your input, prepended by '[notice] '.
      function ViashNotice {
        ViashLog $VIASH_LOGCODE_NOTICE notice $@
      }
      
      # ViashInfo: log normal events
      # usage: ViashInfo This just happened.
      # stdout: Your input, prepended by '[info] '.
      function ViashInfo {
        ViashLog $VIASH_LOGCODE_INFO info $@
      }
      
      # ViashDebug: log all events, for debugging purposes
      # usage: ViashDebug This just happened.
      # stdout: Your input, prepended by '[debug] '.
      function ViashDebug {
        ViashLog $VIASH_LOGCODE_DEBUG debug $@
      }
      
      # find source folder of this component
      VIASH_META_RESOURCES_DIR=`ViashSourceDir ${BASH_SOURCE[0]}`
      
      # backwards compatibility
      VIASH_RESOURCES_DIR="$VIASH_META_RESOURCES_DIR"
      
      # define meta fields
      VIASH_META_FUNCTIONALITY_NAME="msdial_gcms"
      
      
      # ViashHelp: Display helpful explanation about this executable
      function ViashHelp {
        echo "msdial_gcms main_build"
        echo ""
        echo "Options:"
        echo "    --input"
        echo "        type: file, required parameter, multiple values allowed"
        echo "        example: input.abf"
        echo "        One or more ABF files. Can also be a directory of ABF files."
        echo ""
        echo "    --output"
        echo "        type: file, required parameter, output"
        echo "        example: output_dir"
        echo "        An output directory to store the '*.mdsdial' outputs."
        echo ""
        echo "    --input"
        echo "        type: file, required parameter, multiple values allowed"
        echo "        example: input.abf"
        echo "        One or more ABF files. Can also be a directory of ABF files."
        echo ""
        echo "    --output"
        echo "        type: file, required parameter, output"
        echo "        example: output_dir"
        echo "        An output directory to store the '*.mdsdial' outputs."
        echo ""
        echo "    --data_type"
        echo "        type: string"
        echo "        default: Centroid"
        echo "        choices: [ Centroid, Profile ]"
        echo ""
        echo "    --ion_mode"
        echo "        type: string"
        echo "        default: Positive"
        echo "        choices: [ Positive, Negative ]"
        echo ""
        echo "    --accuracy_type"
        echo "        type: string"
        echo "        default: IsNominal"
        echo "        choices: [ IsNominal, IsAccurate ]"
        echo ""
        echo "    --retention_time_begin"
        echo "        type: integer"
        echo "        default: 0"
        echo ""
        echo "    --retention_time_end"
        echo "        type: integer"
        echo "        default: 25"
        echo ""
        echo "    --mass_range_begin"
        echo "        type: integer"
        echo "        default: 0"
        echo ""
        echo "    --mass_range_end"
        echo "        type: integer"
        echo "        default: 1000"
        echo ""
        echo "    --smoothing_method"
        echo "        type: string"
        echo "        default: LinearWeightedMovingAverage"
        echo "        choices: [ SimpleMovingAverage, LinearWeightedMovingAverage,"
        echo "SavitzkyGolayFilter, BinomialFilter ]"
        echo ""
        echo "    --smoothing_level"
        echo "        type: integer"
        echo "        default: 3"
        echo ""
        echo "    --average_peak_width"
        echo "        type: integer"
        echo "        default: 20"
        echo ""
        echo "    --minimum_peak_height"
        echo "        type: integer"
        echo "        default: 1000"
        echo ""
        echo "    --mass_slice_width"
        echo "        type: double"
        echo "        default: 0.1"
        echo ""
        echo "    --mass_accuracy"
        echo "        type: double"
        echo "        default: 0.025"
        echo ""
        echo "    --sigma_window_value"
        echo "        type: double"
        echo "        default: 0.5"
        echo ""
        echo "    --amplitude_cutoff"
        echo "        type: integer"
        echo "        default: 10"
        echo ""
        echo "    --msp_file"
        echo "        type: file"
        echo "        example: file.msp"
        echo ""
        echo "    --ri_index_file"
        echo "        type: file"
        echo "        example: ri_index.txt"
        echo ""
        echo "    --retention_type"
        echo "        type: string"
        echo "        default: RI"
        echo "        choices: [ RI, RT ]"
        echo ""
        echo "    --ri_compound"
        echo "        type: string"
        echo "        default: Alkanes"
        echo "        choices: [ Fames, Alkanes ]"
        echo ""
        echo "    --retention_time_tolerance_for_identification"
        echo "        type: double"
        echo "        default: 0.5"
        echo ""
        echo "    --retention_index_tolerance_for_identification"
        echo "        type: integer"
        echo "        default: 20"
        echo ""
        echo "    --ei_similarity_tolerance_for_identification"
        echo "        type: integer"
        echo "        default: 70"
        echo ""
        echo "    --identification_score_cutoff"
        echo "        type: integer"
        echo "        default: 70"
        echo ""
        echo "    --alignment_index_type"
        echo "        type: string"
        echo "        default: RT"
        echo "        choices: [ RI, RT ]"
        echo ""
        echo "    --retention_time_tolerance_for_alignment"
        echo "        type: double"
        echo "        default: 0.075"
        echo ""
        echo "    --retention_index_tolerance_for_alignment"
        echo "        type: integer"
        echo "        default: 20"
        echo ""
        echo "    --ei_similarity_tolerance_for_alignment"
        echo "        type: integer"
        echo "        default: 70"
        echo ""
        echo "    --retention_time_factor_for_alignment"
        echo "        type: double"
        echo "        default: 0.5"
        echo ""
        echo "    --ei_similarity_factor_for_alignment"
        echo "        type: double"
        echo "        default: 0.5"
        echo ""
        echo "    --peak_count_filter"
        echo "        type: integer"
        echo "        default: 0"
        echo ""
        echo "    --qc_at_least_filter"
        echo "        type: boolean"
        echo "        default: true"
      }
      ######## Helper functions for setting up Docker images for viash ########
      # expects: ViashDockerBuild
      
      # ViashDockerInstallationCheck: check whether Docker is installed correctly
      #
      # examples:
      #   ViashDockerInstallationCheck
      function ViashDockerInstallationCheck {
        ViashDebug "Checking whether Docker is installed"
        if [ ! command -v docker &> /dev/null ]; then
          ViashCritical "Docker doesn't seem to be installed. See 'https://docs.docker.com/get-docker/' for instructions."
          exit 1
        fi
      
        ViashDebug "Checking whether the Docker daemon is running"
        save=$-; set +e
        docker_version=$(docker version --format '{{.Client.APIVersion}}' 2> /dev/null)
        out=$?
        [[ $save =~ e ]] && set -e
        if [ $out -ne 0 ]; then
          ViashCritical "Docker daemon does not seem to be running. Try one of the following:"
          ViashCritical "- Try running 'dockerd' in the command line"
          ViashCritical "- See https://docs.docker.com/config/daemon/"
          exit 1
        fi
      }
      
      # ViashDockerRemoteTagCheck: check whether a Docker image is available 
      # on a remote. Assumes `docker login` has been performed, if relevant.
      #
      # $1                  : image identifier with format `[registry/]image[:tag]`
      # exit code $?        : whether or not the image was found
      # examples:
      #   ViashDockerRemoteTagCheck python:latest
      #   echo $?                                     # returns '0'
      #   ViashDockerRemoteTagCheck sdaizudceahifu
      #   echo $?                                     # returns '1'
      function ViashDockerRemoteTagCheck {
        docker manifest inspect $1 > /dev/null 2> /dev/null
      }
      
      # ViashDockerLocalTagCheck: check whether a Docker image is available locally
      #
      # $1                  : image identifier with format `[registry/]image[:tag]`
      # exit code $?        : whether or not the image was found
      # examples:
      #   docker pull python:latest
      #   ViashDockerLocalTagCheck python:latest
      #   echo $?                                     # returns '0'
      #   ViashDockerLocalTagCheck sdaizudceahifu
      #   echo $?                                     # returns '1'
      function ViashDockerLocalTagCheck {
        [ -n "$(docker images -q $1)" ]
      }
      
      # ViashDockerPull: pull a Docker image
      #
      # $1                  : image identifier with format `[registry/]image[:tag]`
      # exit code $?        : whether or not the image was found
      # examples:
      #   ViashDockerPull python:latest
      #   echo $?                                     # returns '0'
      #   ViashDockerPull sdaizudceahifu
      #   echo $?                                     # returns '1'
      function ViashDockerPull {
        ViashNotice "Checking if Docker image is available at '$1'"
        if [ $VIASH_VERBOSITY -ge $VIASH_LOGCODE_INFO ]; then
          docker pull $1 && return 0 || return 1
        else
          save=$-; set +e
          docker pull $1 2> /dev/null > /dev/null
          out=$?
          [[ $save =~ e ]] && set -e
          if [ $out -ne 0 ]; then
            ViashWarning "Could not pull from '$1'. Docker image doesn't exist or is not accessible."
          fi
          return $out
        fi
      }
      
      # ViashDockerPush: push a Docker image
      #
      # $1                  : image identifier with format `[registry/]image[:tag]`
      # exit code $?        : whether or not the image was found
      # examples:
      #   ViashDockerPush python:latest
      #   echo $?                                     # returns '0'
      #   ViashDockerPush sdaizudceahifu
      #   echo $?                                     # returns '1'
      function ViashDockerPush {
        ViashNotice "Pushing image to '$1'"
        save=$-; set +e
        if [ $VIASH_VERBOSITY -ge $VIASH_LOGCODE_INFO ]; then
          docker push $1
          out=$?
        else
          docker push $1 2> /dev/null > /dev/null
          out=$?
        fi
        [[ $save =~ e ]] && set -e
        if [ $out -eq 0 ]; then
          ViashNotice "Container '$VSHD_ID' push succeeded."
        else
          ViashError "Container '$VSHD_ID' push errored. You might not be logged in or have the necessary permissions."
        fi
        return $out
      }
      
      # ViashDockerPullElseBuild: pull a Docker image, else build it
      #
      # $1                  : image identifier with format `[registry/]image[:tag]`
      # ViashDockerBuild    : a Bash function which builds a docker image, takes image identifier as argument.
      # examples:
      #   ViashDockerPullElseBuild mynewcomponent
      function ViashDockerPullElseBuild {
        save=$-; set +e
        ViashDockerPull $1
        out=$?
        [[ $save =~ e ]] && set -e
        if [ $out -ne 0 ]; then
          ViashDockerBuild $@
        fi
      }
      
      # ViashDockerSetup: create a Docker image, according to specified docker setup strategy
      #
      # $1                  : image identifier with format `[registry/]image[:tag]`
      # $2                  : docker setup strategy, see DockerSetupStrategy.scala
      # ViashDockerBuild    : a Bash function which builds a docker image, takes image identifier as argument.
      # examples:
      #   ViashDockerSetup mynewcomponent alwaysbuild
      function ViashDockerSetup {
        VSHD_ID="$1"
        VSHD_STRAT="$2"
        if [ "$VSHD_STRAT" == "alwaysbuild" -o "$VSHD_STRAT" == "build" -o "$VSHD_STRAT" == "b" ]; then
          ViashDockerBuild $VSHD_ID --no-cache
        elif [ "$VSHD_STRAT" == "alwayspull" -o "$VSHD_STRAT" == "pull" -o "$VSHD_STRAT" == "p" ]; then
          ViashDockerPull $VSHD_ID
        elif [ "$VSHD_STRAT" == "alwayspullelsebuild" -o "$VSHD_STRAT" == "pullelsebuild" ]; then
          ViashDockerPullElseBuild $VSHD_ID --no-cache
        elif [ "$VSHD_STRAT" == "alwayspullelsecachedbuild" -o "$VSHD_STRAT" == "pullelsecachedbuild" ]; then
          ViashDockerPullElseBuild $VSHD_ID
        elif [ "$VSHD_STRAT" == "alwayscachedbuild" -o "$VSHD_STRAT" == "cachedbuild" -o "$VSHD_STRAT" == "cb" ]; then
          ViashDockerBuild $VSHD_ID
        elif [[ "$VSHD_STRAT" =~ ^ifneedbe ]]; then
          save=$-; set +e
          ViashDockerLocalTagCheck $VSHD_ID
          outCheck=$?
          [[ $save =~ e ]] && set -e
          if [ $outCheck -eq 0 ]; then
            ViashInfo "Image $VSHD_ID already exists"
          elif [ "$VSHD_STRAT" == "ifneedbebuild" ]; then
            ViashDockerBuild $VSHD_ID --no-cache
          elif [ "$VSHD_STRAT" == "ifneedbecachedbuild" ]; then
            ViashDockerBuild $VSHD_ID
          elif [ "$VSHD_STRAT" == "ifneedbepull" ]; then
            ViashDockerPull $VSHD_ID
          elif [ "$VSHD_STRAT" == "ifneedbepullelsebuild" ]; then
            ViashDockerPullElseBuild $VSHD_ID --no-cache
          elif [ "$VSHD_STRAT" == "ifneedbepullelsecachedbuild" ]; then
            ViashDockerPullElseBuild $VSHD_ID
          else
            ViashError "Unrecognised Docker strategy: $VSHD_STRAT"
            exit 1
          fi
        elif [ "$VSHD_STRAT" == "push" -o "$VSHD_STRAT" == "forcepush" -o "$VSHD_STRAT" == "alwayspush" ]; then
          ViashDockerPush "$VSHD_ID"
        elif [ "$VSHD_STRAT" == "pushifnotpresent" -o "$VSHD_STRAT" == "gentlepush" -o "$VSHD_STRAT" == "maybepush" ]; then
          save=$-; set +e
          ViashDockerRemoteTagCheck $VSHD_ID
          outCheck=$?
          [[ $save =~ e ]] && set -e
          if [ $outCheck -eq 0 ]; then
            ViashNotice "Container '$VSHD_ID' exists, doing nothing."
          else
            ViashNotice "Container '$VSHD_ID' does not yet exist."
            ViashDockerPush "$VSHD_ID"
          fi
        elif [ "$VSHD_STRAT" == "donothing" -o "$VSHD_STRAT" == "meh" ]; then
          ViashNotice "Skipping setup."
        else
          ViashError "Unrecognised Docker strategy: $VSHD_STRAT"
          exit 1
        fi
      }
      
      
      ######## End of helper functions for setting up Docker images for viash ########
      
      # ViashDockerFile: print the dockerfile to stdout
      # return : dockerfile required to run this component
      # examples:
      #   ViashDockerFile
      function ViashDockerfile {
        cat << 'VIASHDOCKER'
      FROM python:3.10
      
      RUN apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y libnetcdf-dev && \
        rm -rf /var/lib/apt/lists/*
      
      RUN mkdir /tmp/msdial && cd /tmp/msdial && wget -q https://www.dropbox.com/s/dx5fakz4sy2xgha/MSDIAL%20build%20Linux.zip?dl=1 -O "msdial.zip" && unzip "msdial.zip" -d /msdial && rm -rf /tmp/msdial && chmod +x /msdial/MsdialConsoleApp
      RUN pip install --upgrade pip && \
        pip install --upgrade --no-cache-dir "pandas"
      
      LABEL org.opencontainers.image.authors="Robrecht Cannoodt <rcannood@gmail.com> (maintainer) {github: rcannood, orcid: 0000-0003-3641-729X}"
      LABEL org.opencontainers.image.description="Companion container for running component msdial msdial_gcms"
      LABEL org.opencontainers.image.created="2022-06-17T17:58:40Z"
      LABEL org.opencontainers.image.source="https://github.com/czbiohub/mspipelines"
      LABEL org.opencontainers.image.revision="65f07e027d6237818a16ccc7c0c9ff56df3c5e53"
      LABEL org.opencontainers.image.version="main_build"
      VIASHDOCKER
      }
      
      # ViashDockerBuild: build a docker container
      # $1              : image identifier with format `[registry/]image[:tag]`
      # exit code $?    : whether or not the image was built
      function ViashDockerBuild {
        # create temporary directory to store dockerfile & optional resources in
        tmpdir=$(mktemp -d "$VIASH_TEMP/viashsetupdocker-msdial_gcms-XXXXXX")
        function clean_up {
          rm -rf "$tmpdir"
        }
        trap clean_up EXIT
      
        # store dockerfile and resources
        ViashDockerfile > $tmpdir/Dockerfile
        cp -r $VIASH_META_RESOURCES_DIR/* $tmpdir
      
        # Build the container
        ViashNotice "Building container '$1' with Dockerfile"
        ViashInfo "Running 'docker build -t $@ $tmpdir'"
        save=$-; set +e
        if [ $VIASH_VERBOSITY -ge $VIASH_LOGCODE_INFO ]; then
          docker build -t $@ $tmpdir
        else
          docker build -t $@ $tmpdir &> $tmpdir/docker_build.log
        fi
        out=$?
        [[ $save =~ e ]] && set -e
        if [ $out -ne 0 ]; then
          ViashError "Error occurred while building container '$1'"
          if [ $VIASH_VERBOSITY -lt $VIASH_LOGCODE_INFO ]; then
            ViashError "Transcript: --------------------------------"
            cat "$tmpdir/docker_build.log"
            ViashError "End of transcript --------------------------"
          fi
          exit 1
        fi
      }
      # ViashAbsolutePath: generate absolute path from relative path
      # borrowed from https://stackoverflow.com/a/21951256
      # $1     : relative filename
      # return : absolute path
      # examples:
      #   ViashAbsolutePath some_file.txt   # returns /path/to/some_file.txt
      #   ViashAbsolutePath /foo/bar/..     # returns /foo
      function ViashAbsolutePath {
        local thePath
        if [[ ! "$1" =~ ^/ ]]; then
          thePath="$PWD/$1"
        else
          thePath="$1"
        fi
        echo "$thePath" | (
          IFS=/
          read -a parr
          declare -a outp
          for i in "${parr[@]}"; do
            case "$i" in
            ''|.) continue ;;
            ..)
              len=${#outp[@]}
              if ((len==0)); then
                continue
              else
                unset outp[$((len-1))]
              fi
              ;;
            *)
              len=${#outp[@]}
              outp[$len]="$i"
            ;;
            esac
          done
          echo /"${outp[*]}"
        )
      }
      # ViashAutodetectMount: auto configuring docker mounts from parameters
      # $1                  : The parameter value
      # returns             : New parameter
      # $VIASH_EXTRA_MOUNTS : Added another parameter to be passed to docker
      # examples:
      #   ViashAutodetectMount /path/to/bar      # returns '/viash_automount/path/to/bar'
      #   ViashAutodetectMountArg /path/to/bar   # returns '-v /path/to:/viash_automount/path/to'
      function ViashAutodetectMount {
        abs_path=$(ViashAbsolutePath "$1")
        if [ -d "$abs_path" ]; then
          mount_source="$abs_path"
          base_name=""
        else
          mount_source=`dirname "$abs_path"`
          base_name=`basename "$abs_path"`
        fi
        mount_target="/viash_automount$mount_source"
        echo "$mount_target/$base_name"
      }
      function ViashAutodetectMountArg {
        abs_path=$(ViashAbsolutePath "$1")
        if [ -d "$abs_path" ]; then
          mount_source="$abs_path"
          base_name=""
        else
          mount_source=`dirname "$abs_path"`
          base_name=`basename "$abs_path"`
        fi
        mount_target="/viash_automount$mount_source"
        echo "-v \"$mount_source:$mount_target\""
      }
      # ViashExtractFlags: Retain leading flag
      # $1     : string with a possible leading flag
      # return : leading flag
      # examples:
      #   ViashExtractFlags --foo=bar  # returns --foo
      function ViashExtractFlags {
        echo $1 | sed 's/=.*//'
      }
      # initialise variables
      VIASH_EXTRA_MOUNTS=''
      
      # initialise array
      VIASH_POSITIONAL_ARGS=''
      VIASH_MODE='run'
      
      while [[ $# -gt 0 ]]; do
          case "$1" in
              -h|--help)
                  ViashHelp
                  exit
                  ;;
              ---v|---verbose)
                  let "VIASH_VERBOSITY=VIASH_VERBOSITY+1"
                  shift 1
                  ;;
              ---verbosity)
                  VIASH_VERBOSITY="$2"
                  shift 2
                  ;;
              ---verbosity=*)
                  VIASH_VERBOSITY="$(ViashRemoveFlags "$1")"
                  shift 1
                  ;;
              --version)
                  echo "msdial_gcms main_build"
                  exit
                  ;;
              --input)
                  if [ -z "$VIASH_PAR_INPUT" ]; then
                    VIASH_PAR_INPUT="$2"
                  else
                    VIASH_PAR_INPUT="$VIASH_PAR_INPUT:""$2"
                  fi
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --input. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --input=*)
                  if [ -z "$VIASH_PAR_INPUT" ]; then
                    VIASH_PAR_INPUT=$(ViashRemoveFlags "$1")
                  else
                    VIASH_PAR_INPUT="$VIASH_PAR_INPUT:"$(ViashRemoveFlags "$1")
                  fi
                  shift 1
                  ;;
              --output)
                  VIASH_PAR_OUTPUT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --output. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --output=*)
                  VIASH_PAR_OUTPUT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --input)
                  if [ -z "$VIASH_PAR_INPUT" ]; then
                    VIASH_PAR_INPUT="$2"
                  else
                    VIASH_PAR_INPUT="$VIASH_PAR_INPUT:""$2"
                  fi
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --input. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --input=*)
                  if [ -z "$VIASH_PAR_INPUT" ]; then
                    VIASH_PAR_INPUT=$(ViashRemoveFlags "$1")
                  else
                    VIASH_PAR_INPUT="$VIASH_PAR_INPUT:"$(ViashRemoveFlags "$1")
                  fi
                  shift 1
                  ;;
              --output)
                  VIASH_PAR_OUTPUT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --output. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --output=*)
                  VIASH_PAR_OUTPUT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --data_type)
                  VIASH_PAR_DATA_TYPE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --data_type. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --data_type=*)
                  VIASH_PAR_DATA_TYPE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --ion_mode)
                  VIASH_PAR_ION_MODE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --ion_mode. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --ion_mode=*)
                  VIASH_PAR_ION_MODE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --accuracy_type)
                  VIASH_PAR_ACCURACY_TYPE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --accuracy_type. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --accuracy_type=*)
                  VIASH_PAR_ACCURACY_TYPE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_time_begin)
                  VIASH_PAR_RETENTION_TIME_BEGIN="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_time_begin. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_time_begin=*)
                  VIASH_PAR_RETENTION_TIME_BEGIN=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_time_end)
                  VIASH_PAR_RETENTION_TIME_END="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_time_end. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_time_end=*)
                  VIASH_PAR_RETENTION_TIME_END=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --mass_range_begin)
                  VIASH_PAR_MASS_RANGE_BEGIN="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --mass_range_begin. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --mass_range_begin=*)
                  VIASH_PAR_MASS_RANGE_BEGIN=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --mass_range_end)
                  VIASH_PAR_MASS_RANGE_END="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --mass_range_end. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --mass_range_end=*)
                  VIASH_PAR_MASS_RANGE_END=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --smoothing_method)
                  VIASH_PAR_SMOOTHING_METHOD="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --smoothing_method. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --smoothing_method=*)
                  VIASH_PAR_SMOOTHING_METHOD=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --smoothing_level)
                  VIASH_PAR_SMOOTHING_LEVEL="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --smoothing_level. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --smoothing_level=*)
                  VIASH_PAR_SMOOTHING_LEVEL=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --average_peak_width)
                  VIASH_PAR_AVERAGE_PEAK_WIDTH="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --average_peak_width. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --average_peak_width=*)
                  VIASH_PAR_AVERAGE_PEAK_WIDTH=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --minimum_peak_height)
                  VIASH_PAR_MINIMUM_PEAK_HEIGHT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --minimum_peak_height. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --minimum_peak_height=*)
                  VIASH_PAR_MINIMUM_PEAK_HEIGHT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --mass_slice_width)
                  VIASH_PAR_MASS_SLICE_WIDTH="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --mass_slice_width. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --mass_slice_width=*)
                  VIASH_PAR_MASS_SLICE_WIDTH=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --mass_accuracy)
                  VIASH_PAR_MASS_ACCURACY="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --mass_accuracy. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --mass_accuracy=*)
                  VIASH_PAR_MASS_ACCURACY=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --sigma_window_value)
                  VIASH_PAR_SIGMA_WINDOW_VALUE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --sigma_window_value. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --sigma_window_value=*)
                  VIASH_PAR_SIGMA_WINDOW_VALUE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --amplitude_cutoff)
                  VIASH_PAR_AMPLITUDE_CUTOFF="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --amplitude_cutoff. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --amplitude_cutoff=*)
                  VIASH_PAR_AMPLITUDE_CUTOFF=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --msp_file)
                  VIASH_PAR_MSP_FILE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --msp_file. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --msp_file=*)
                  VIASH_PAR_MSP_FILE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --ri_index_file)
                  VIASH_PAR_RI_INDEX_FILE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --ri_index_file. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --ri_index_file=*)
                  VIASH_PAR_RI_INDEX_FILE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_type)
                  VIASH_PAR_RETENTION_TYPE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_type. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_type=*)
                  VIASH_PAR_RETENTION_TYPE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --ri_compound)
                  VIASH_PAR_RI_COMPOUND="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --ri_compound. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --ri_compound=*)
                  VIASH_PAR_RI_COMPOUND=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_time_tolerance_for_identification)
                  VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_time_tolerance_for_identification. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_time_tolerance_for_identification=*)
                  VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_index_tolerance_for_identification)
                  VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_index_tolerance_for_identification. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_index_tolerance_for_identification=*)
                  VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --ei_similarity_tolerance_for_identification)
                  VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --ei_similarity_tolerance_for_identification. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --ei_similarity_tolerance_for_identification=*)
                  VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --identification_score_cutoff)
                  VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --identification_score_cutoff. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --identification_score_cutoff=*)
                  VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --alignment_index_type)
                  VIASH_PAR_ALIGNMENT_INDEX_TYPE="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --alignment_index_type. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --alignment_index_type=*)
                  VIASH_PAR_ALIGNMENT_INDEX_TYPE=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_time_tolerance_for_alignment)
                  VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_time_tolerance_for_alignment. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_time_tolerance_for_alignment=*)
                  VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_index_tolerance_for_alignment)
                  VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_index_tolerance_for_alignment. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_index_tolerance_for_alignment=*)
                  VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --ei_similarity_tolerance_for_alignment)
                  VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --ei_similarity_tolerance_for_alignment. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --ei_similarity_tolerance_for_alignment=*)
                  VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --retention_time_factor_for_alignment)
                  VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --retention_time_factor_for_alignment. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --retention_time_factor_for_alignment=*)
                  VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --ei_similarity_factor_for_alignment)
                  VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --ei_similarity_factor_for_alignment. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --ei_similarity_factor_for_alignment=*)
                  VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --peak_count_filter)
                  VIASH_PAR_PEAK_COUNT_FILTER="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --peak_count_filter. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --peak_count_filter=*)
                  VIASH_PAR_PEAK_COUNT_FILTER=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              --qc_at_least_filter)
                  VIASH_PAR_QC_AT_LEAST_FILTER="$2"
                  [ $# -lt 2 ] && ViashError Not enough arguments passed to --qc_at_least_filter. Use "--help" to get more information on the parameters. && exit 1
                  shift 2
                  ;;
              --qc_at_least_filter=*)
                  VIASH_PAR_QC_AT_LEAST_FILTER=$(ViashRemoveFlags "$1")
                  shift 1
                  ;;
              ---setup)
                  VIASH_MODE='docker_setup'
                  VIASH_DOCKER_SETUP_STRATEGY="$2"
                  shift 1
                  ;;
              ---setup=*)
                  VIASH_MODE='docker_setup'
                  VIASH_DOCKER_SETUP_STRATEGY="$(ViashRemoveFlags "$1")"
                  shift 2
                  ;;
              ---dockerfile)
                  ViashDockerfile
                  exit 0
                  ;;
              ---v|---volume)
                  VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS -v "$2""
                  shift 2
                  ;;
              ---volume=*)
                  VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS -v $(ViashRemoveFlags "$2")"
                  shift 1
                  ;;
              ---debug)
                  VIASH_MODE='docker_debug'
                  shift 1
                  ;;
              *)  # positional arg or unknown option
                  # since the positional args will be eval'd, can we always quote, instead of using ViashQuote
                  VIASH_POSITIONAL_ARGS="$VIASH_POSITIONAL_ARGS '$1'"
                  shift # past argument
                  ;;
          esac
      done
      
      # parse positional parameters
      eval set -- $VIASH_POSITIONAL_ARGS
      
      
      ViashDockerInstallationCheck
      if [ $VIASH_MODE == "docker_setup" ]; then
        ViashDockerSetup 'ghcr.io/czbiohub/mspipelines/msdial_msdial_gcms:main_build' "$VIASH_DOCKER_SETUP_STRATEGY"
        exit 0
      fi
      ViashDockerSetup 'ghcr.io/czbiohub/mspipelines/msdial_msdial_gcms:main_build' ifneedbepullelsecachedbuild
      if [ $VIASH_MODE == "docker_debug" ]; then
        ViashNotice "+ docker run --entrypoint=bash -i --rm -v "$(pwd)":/pwd --workdir /pwd -t 'ghcr.io/czbiohub/mspipelines/msdial_msdial_gcms:main_build'"
        docker run --entrypoint=bash -i --rm -v "$(pwd)":/pwd --workdir /pwd -t 'ghcr.io/czbiohub/mspipelines/msdial_msdial_gcms:main_build'
        exit 0
      fi
      
      
      
      
      # check whether required parameters exist
      if [ -z "$VIASH_PAR_INPUT" ]; then
        ViashError '--input' is a required argument. Use "--help" to get more information on the parameters.
        exit 1
      fi
      if [ -z "$VIASH_PAR_OUTPUT" ]; then
        ViashError '--output' is a required argument. Use "--help" to get more information on the parameters.
        exit 1
      fi
      if [ -z "$VIASH_PAR_INPUT" ]; then
        ViashError '--input' is a required argument. Use "--help" to get more information on the parameters.
        exit 1
      fi
      if [ -z "$VIASH_PAR_OUTPUT" ]; then
        ViashError '--output' is a required argument. Use "--help" to get more information on the parameters.
        exit 1
      fi
      if [ -z "$VIASH_PAR_DATA_TYPE" ]; then
        VIASH_PAR_DATA_TYPE="Centroid"
      fi
      if [ -z "$VIASH_PAR_ION_MODE" ]; then
        VIASH_PAR_ION_MODE="Positive"
      fi
      if [ -z "$VIASH_PAR_ACCURACY_TYPE" ]; then
        VIASH_PAR_ACCURACY_TYPE="IsNominal"
      fi
      if [ -z "$VIASH_PAR_RETENTION_TIME_BEGIN" ]; then
        VIASH_PAR_RETENTION_TIME_BEGIN="0"
      fi
      if [ -z "$VIASH_PAR_RETENTION_TIME_END" ]; then
        VIASH_PAR_RETENTION_TIME_END="25"
      fi
      if [ -z "$VIASH_PAR_MASS_RANGE_BEGIN" ]; then
        VIASH_PAR_MASS_RANGE_BEGIN="0"
      fi
      if [ -z "$VIASH_PAR_MASS_RANGE_END" ]; then
        VIASH_PAR_MASS_RANGE_END="1000"
      fi
      if [ -z "$VIASH_PAR_SMOOTHING_METHOD" ]; then
        VIASH_PAR_SMOOTHING_METHOD="LinearWeightedMovingAverage"
      fi
      if [ -z "$VIASH_PAR_SMOOTHING_LEVEL" ]; then
        VIASH_PAR_SMOOTHING_LEVEL="3"
      fi
      if [ -z "$VIASH_PAR_AVERAGE_PEAK_WIDTH" ]; then
        VIASH_PAR_AVERAGE_PEAK_WIDTH="20"
      fi
      if [ -z "$VIASH_PAR_MINIMUM_PEAK_HEIGHT" ]; then
        VIASH_PAR_MINIMUM_PEAK_HEIGHT="1000"
      fi
      if [ -z "$VIASH_PAR_MASS_SLICE_WIDTH" ]; then
        VIASH_PAR_MASS_SLICE_WIDTH="0.1"
      fi
      if [ -z "$VIASH_PAR_MASS_ACCURACY" ]; then
        VIASH_PAR_MASS_ACCURACY="0.025"
      fi
      if [ -z "$VIASH_PAR_SIGMA_WINDOW_VALUE" ]; then
        VIASH_PAR_SIGMA_WINDOW_VALUE="0.5"
      fi
      if [ -z "$VIASH_PAR_AMPLITUDE_CUTOFF" ]; then
        VIASH_PAR_AMPLITUDE_CUTOFF="10"
      fi
      if [ -z "$VIASH_PAR_RETENTION_TYPE" ]; then
        VIASH_PAR_RETENTION_TYPE="RI"
      fi
      if [ -z "$VIASH_PAR_RI_COMPOUND" ]; then
        VIASH_PAR_RI_COMPOUND="Alkanes"
      fi
      if [ -z "$VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION" ]; then
        VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION="0.5"
      fi
      if [ -z "$VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION" ]; then
        VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION="20"
      fi
      if [ -z "$VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION" ]; then
        VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION="70"
      fi
      if [ -z "$VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF" ]; then
        VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF="70"
      fi
      if [ -z "$VIASH_PAR_ALIGNMENT_INDEX_TYPE" ]; then
        VIASH_PAR_ALIGNMENT_INDEX_TYPE="RT"
      fi
      if [ -z "$VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT" ]; then
        VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT="0.075"
      fi
      if [ -z "$VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT" ]; then
        VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT="20"
      fi
      if [ -z "$VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT" ]; then
        VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT="70"
      fi
      if [ -z "$VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT" ]; then
        VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT="0.5"
      fi
      if [ -z "$VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT" ]; then
        VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT="0.5"
      fi
      if [ -z "$VIASH_PAR_PEAK_COUNT_FILTER" ]; then
        VIASH_PAR_PEAK_COUNT_FILTER="0"
      fi
      if [ -z "$VIASH_PAR_QC_AT_LEAST_FILTER" ]; then
        VIASH_PAR_QC_AT_LEAST_FILTER="true"
      fi
      
      
      # check whether parameters values are of the right type
      
      
      
      
      
      
      
      if [[ -n "$VIASH_PAR_RETENTION_TIME_BEGIN" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_TIME_BEGIN" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--retention_time_begin' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_RETENTION_TIME_END" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_TIME_END" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--retention_time_end' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_MASS_RANGE_BEGIN" ]]; then
        if ! [[ "$VIASH_PAR_MASS_RANGE_BEGIN" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--mass_range_begin' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_MASS_RANGE_END" ]]; then
        if ! [[ "$VIASH_PAR_MASS_RANGE_END" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--mass_range_end' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      
      if [[ -n "$VIASH_PAR_SMOOTHING_LEVEL" ]]; then
        if ! [[ "$VIASH_PAR_SMOOTHING_LEVEL" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--smoothing_level' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_AVERAGE_PEAK_WIDTH" ]]; then
        if ! [[ "$VIASH_PAR_AVERAGE_PEAK_WIDTH" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--average_peak_width' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_MINIMUM_PEAK_HEIGHT" ]]; then
        if ! [[ "$VIASH_PAR_MINIMUM_PEAK_HEIGHT" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--minimum_peak_height' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_MASS_SLICE_WIDTH" ]]; then
        if ! [[ "$VIASH_PAR_MASS_SLICE_WIDTH" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--mass_slice_width' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_MASS_ACCURACY" ]]; then
        if ! [[ "$VIASH_PAR_MASS_ACCURACY" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--mass_accuracy' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_SIGMA_WINDOW_VALUE" ]]; then
        if ! [[ "$VIASH_PAR_SIGMA_WINDOW_VALUE" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--sigma_window_value' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_AMPLITUDE_CUTOFF" ]]; then
        if ! [[ "$VIASH_PAR_AMPLITUDE_CUTOFF" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--amplitude_cutoff' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      
      
      
      
      if [[ -n "$VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--retention_time_tolerance_for_identification' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--retention_index_tolerance_for_identification' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION" ]]; then
        if ! [[ "$VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--ei_similarity_tolerance_for_identification' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF" ]]; then
        if ! [[ "$VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--identification_score_cutoff' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      
      if [[ -n "$VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--retention_time_tolerance_for_alignment' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--retention_index_tolerance_for_alignment' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT" ]]; then
        if ! [[ "$VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--ei_similarity_tolerance_for_alignment' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT" ]]; then
        if ! [[ "$VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--retention_time_factor_for_alignment' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT" ]]; then
        if ! [[ "$VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT" =~ ^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$ ]]; then
          ViashError '--ei_similarity_factor_for_alignment' has to be a double. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_PEAK_COUNT_FILTER" ]]; then
        if ! [[ "$VIASH_PAR_PEAK_COUNT_FILTER" =~ ^[-+]?[0-9]+$ ]]; then
          ViashError '--peak_count_filter' has to be an integer. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      if [[ -n "$VIASH_PAR_QC_AT_LEAST_FILTER" ]]; then
        if ! [[ "$VIASH_PAR_QC_AT_LEAST_FILTER" =~ ^(true|True|TRUE|false|False|FALSE|yes|Yes|YES|no|No|NO)$ ]]; then
          ViashError '--qc_at_least_filter' has to be a boolean. Use "--help" to get more information on the parameters.
          exit 1
        fi
      fi
      
      
      # check whether parameters values are of the right type
      
      
      
      
      if [ ! -z "$VIASH_PAR_DATA_TYPE" ]; then
        VIASH_PAR_DATA_TYPE_CHOICES=("Centroid:Profile")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_DATA_TYPE_CHOICES[*]}:" =~ ":$VIASH_PAR_DATA_TYPE:" ]]; then
          ViashError '--data_type' specified value of \'$VIASH_PAR_DATA_TYPE\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      if [ ! -z "$VIASH_PAR_ION_MODE" ]; then
        VIASH_PAR_ION_MODE_CHOICES=("Positive:Negative")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_ION_MODE_CHOICES[*]}:" =~ ":$VIASH_PAR_ION_MODE:" ]]; then
          ViashError '--ion_mode' specified value of \'$VIASH_PAR_ION_MODE\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      if [ ! -z "$VIASH_PAR_ACCURACY_TYPE" ]; then
        VIASH_PAR_ACCURACY_TYPE_CHOICES=("IsNominal:IsAccurate")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_ACCURACY_TYPE_CHOICES[*]}:" =~ ":$VIASH_PAR_ACCURACY_TYPE:" ]]; then
          ViashError '--accuracy_type' specified value of \'$VIASH_PAR_ACCURACY_TYPE\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      
      
      
      
      if [ ! -z "$VIASH_PAR_SMOOTHING_METHOD" ]; then
        VIASH_PAR_SMOOTHING_METHOD_CHOICES=("SimpleMovingAverage:LinearWeightedMovingAverage:SavitzkyGolayFilter:BinomialFilter")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_SMOOTHING_METHOD_CHOICES[*]}:" =~ ":$VIASH_PAR_SMOOTHING_METHOD:" ]]; then
          ViashError '--smoothing_method' specified value of \'$VIASH_PAR_SMOOTHING_METHOD\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      
      
      
      
      
      
      
      
      
      if [ ! -z "$VIASH_PAR_RETENTION_TYPE" ]; then
        VIASH_PAR_RETENTION_TYPE_CHOICES=("RI:RT")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_RETENTION_TYPE_CHOICES[*]}:" =~ ":$VIASH_PAR_RETENTION_TYPE:" ]]; then
          ViashError '--retention_type' specified value of \'$VIASH_PAR_RETENTION_TYPE\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      if [ ! -z "$VIASH_PAR_RI_COMPOUND" ]; then
        VIASH_PAR_RI_COMPOUND_CHOICES=("Fames:Alkanes")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_RI_COMPOUND_CHOICES[*]}:" =~ ":$VIASH_PAR_RI_COMPOUND:" ]]; then
          ViashError '--ri_compound' specified value of \'$VIASH_PAR_RI_COMPOUND\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      
      
      
      
      if [ ! -z "$VIASH_PAR_ALIGNMENT_INDEX_TYPE" ]; then
        VIASH_PAR_ALIGNMENT_INDEX_TYPE_CHOICES=("RI:RT")
        IFS=:
        set -f
        if ! [[ ":${VIASH_PAR_ALIGNMENT_INDEX_TYPE_CHOICES[*]}:" =~ ":$VIASH_PAR_ALIGNMENT_INDEX_TYPE:" ]]; then
          ViashError '--alignment_index_type' specified value of \'$VIASH_PAR_ALIGNMENT_INDEX_TYPE\' is not in the list of allowed values. Use "--help" to get more information on the parameters.
          exit 1
        fi
        set +f
        unset IFS
      fi
      
      
      
      
      
      
      
      
      
      # detect volumes from file arguments
      if [ ! -z "$VIASH_PAR_INPUT" ]; then
        IFS=":"
        for var in $VIASH_PAR_INPUT; do
          unset IFS
          VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS $(ViashAutodetectMountArg "$var")"
          if [ -z "$VIASH_TEST_INPUT" ]; then
            VIASH_TEST_INPUT="$(ViashAutodetectMount "$var")"
          else
            VIASH_TEST_INPUT="$VIASH_TEST_INPUT:""$(ViashAutodetectMount "$var")"
          fi
        done
        VIASH_PAR_INPUT="$VIASH_TEST_INPUT"
      fi
      if [ ! -z "$VIASH_PAR_OUTPUT" ]; then
        VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS $(ViashAutodetectMountArg "$VIASH_PAR_OUTPUT")"
        VIASH_PAR_OUTPUT=$(ViashAutodetectMount "$VIASH_PAR_OUTPUT")
      fi
      if [ ! -z "$VIASH_PAR_MSP_FILE" ]; then
        VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS $(ViashAutodetectMountArg "$VIASH_PAR_MSP_FILE")"
        VIASH_PAR_MSP_FILE=$(ViashAutodetectMount "$VIASH_PAR_MSP_FILE")
      fi
      if [ ! -z "$VIASH_PAR_RI_INDEX_FILE" ]; then
        VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS $(ViashAutodetectMountArg "$VIASH_PAR_RI_INDEX_FILE")"
        VIASH_PAR_RI_INDEX_FILE=$(ViashAutodetectMount "$VIASH_PAR_RI_INDEX_FILE")
      fi
      
      # Always mount the resource directory
      VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS $(ViashAutodetectMountArg "$VIASH_META_RESOURCES_DIR")"
      VIASH_META_RESOURCES_DIR=$(ViashAutodetectMount "$VIASH_META_RESOURCES_DIR")
      
      # Always mount the VIASH_TEMP directory
      VIASH_EXTRA_MOUNTS="$VIASH_EXTRA_MOUNTS $(ViashAutodetectMountArg "$VIASH_TEMP")"
      VIASH_TEMP=$(ViashAutodetectMount "$VIASH_TEMP")
      # change file ownership
      function ViashPerformChown {
        
        if [ ! -z "$VIASH_PAR_OUTPUT" ]; then
          eval docker run --entrypoint=chown -i --rm $VIASH_EXTRA_MOUNTS ghcr.io/czbiohub/mspipelines/msdial_msdial_gcms:main_build "$(id -u):$(id -g)" --silent --recursive "$VIASH_PAR_OUTPUT"
        fi
      }
      trap ViashPerformChown EXIT
      
      
      cat << VIASHEOF | eval docker run --entrypoint=bash -i --rm $VIASH_EXTRA_MOUNTS ghcr.io/czbiohub/mspipelines/msdial_msdial_gcms:main_build
      set -e
      tempscript=\$(mktemp "$VIASH_TEMP/viash-run-msdial_gcms-XXXXXX")
      function clean_up {
        rm "\$tempscript"
      }
      function interrupt {
        echo -e "\nCTRL-C Pressed..."
        exit 1
      }
      trap clean_up EXIT
      trap interrupt INT SIGINT
      cat > "\$tempscript" << 'VIASHMAIN'
      import os
      import csv
      import re
      import tempfile
      import shutil
      import subprocess
      
      msdial_path="/msdial"
      ## VIASH START
      # The following code has been auto-generated by Viash.
      par = {
        'input': $( if [ ! -z ${VIASH_PAR_INPUT+x} ]; then echo "'${VIASH_PAR_INPUT//\'/\\\'}'.split(':')"; else echo None; fi ),
        'output': $( if [ ! -z ${VIASH_PAR_OUTPUT+x} ]; then echo "'${VIASH_PAR_OUTPUT//\'/\\\'}'"; else echo None; fi ),
        'input': $( if [ ! -z ${VIASH_PAR_INPUT+x} ]; then echo "'${VIASH_PAR_INPUT//\'/\\\'}'.split(':')"; else echo None; fi ),
        'output': $( if [ ! -z ${VIASH_PAR_OUTPUT+x} ]; then echo "'${VIASH_PAR_OUTPUT//\'/\\\'}'"; else echo None; fi ),
        'data_type': $( if [ ! -z ${VIASH_PAR_DATA_TYPE+x} ]; then echo "'${VIASH_PAR_DATA_TYPE//\'/\\\'}'"; else echo None; fi ),
        'ion_mode': $( if [ ! -z ${VIASH_PAR_ION_MODE+x} ]; then echo "'${VIASH_PAR_ION_MODE//\'/\\\'}'"; else echo None; fi ),
        'accuracy_type': $( if [ ! -z ${VIASH_PAR_ACCURACY_TYPE+x} ]; then echo "'${VIASH_PAR_ACCURACY_TYPE//\'/\\\'}'"; else echo None; fi ),
        'retention_time_begin': $( if [ ! -z ${VIASH_PAR_RETENTION_TIME_BEGIN+x} ]; then echo "int('${VIASH_PAR_RETENTION_TIME_BEGIN//\'/\\\'}')"; else echo None; fi ),
        'retention_time_end': $( if [ ! -z ${VIASH_PAR_RETENTION_TIME_END+x} ]; then echo "int('${VIASH_PAR_RETENTION_TIME_END//\'/\\\'}')"; else echo None; fi ),
        'mass_range_begin': $( if [ ! -z ${VIASH_PAR_MASS_RANGE_BEGIN+x} ]; then echo "int('${VIASH_PAR_MASS_RANGE_BEGIN//\'/\\\'}')"; else echo None; fi ),
        'mass_range_end': $( if [ ! -z ${VIASH_PAR_MASS_RANGE_END+x} ]; then echo "int('${VIASH_PAR_MASS_RANGE_END//\'/\\\'}')"; else echo None; fi ),
        'smoothing_method': $( if [ ! -z ${VIASH_PAR_SMOOTHING_METHOD+x} ]; then echo "'${VIASH_PAR_SMOOTHING_METHOD//\'/\\\'}'"; else echo None; fi ),
        'smoothing_level': $( if [ ! -z ${VIASH_PAR_SMOOTHING_LEVEL+x} ]; then echo "int('${VIASH_PAR_SMOOTHING_LEVEL//\'/\\\'}')"; else echo None; fi ),
        'average_peak_width': $( if [ ! -z ${VIASH_PAR_AVERAGE_PEAK_WIDTH+x} ]; then echo "int('${VIASH_PAR_AVERAGE_PEAK_WIDTH//\'/\\\'}')"; else echo None; fi ),
        'minimum_peak_height': $( if [ ! -z ${VIASH_PAR_MINIMUM_PEAK_HEIGHT+x} ]; then echo "int('${VIASH_PAR_MINIMUM_PEAK_HEIGHT//\'/\\\'}')"; else echo None; fi ),
        'mass_slice_width': $( if [ ! -z ${VIASH_PAR_MASS_SLICE_WIDTH+x} ]; then echo "float('${VIASH_PAR_MASS_SLICE_WIDTH//\'/\\\'}')"; else echo None; fi ),
        'mass_accuracy': $( if [ ! -z ${VIASH_PAR_MASS_ACCURACY+x} ]; then echo "float('${VIASH_PAR_MASS_ACCURACY//\'/\\\'}')"; else echo None; fi ),
        'sigma_window_value': $( if [ ! -z ${VIASH_PAR_SIGMA_WINDOW_VALUE+x} ]; then echo "float('${VIASH_PAR_SIGMA_WINDOW_VALUE//\'/\\\'}')"; else echo None; fi ),
        'amplitude_cutoff': $( if [ ! -z ${VIASH_PAR_AMPLITUDE_CUTOFF+x} ]; then echo "int('${VIASH_PAR_AMPLITUDE_CUTOFF//\'/\\\'}')"; else echo None; fi ),
        'msp_file': $( if [ ! -z ${VIASH_PAR_MSP_FILE+x} ]; then echo "'${VIASH_PAR_MSP_FILE//\'/\\\'}'"; else echo None; fi ),
        'ri_index_file': $( if [ ! -z ${VIASH_PAR_RI_INDEX_FILE+x} ]; then echo "'${VIASH_PAR_RI_INDEX_FILE//\'/\\\'}'"; else echo None; fi ),
        'retention_type': $( if [ ! -z ${VIASH_PAR_RETENTION_TYPE+x} ]; then echo "'${VIASH_PAR_RETENTION_TYPE//\'/\\\'}'"; else echo None; fi ),
        'ri_compound': $( if [ ! -z ${VIASH_PAR_RI_COMPOUND+x} ]; then echo "'${VIASH_PAR_RI_COMPOUND//\'/\\\'}'"; else echo None; fi ),
        'retention_time_tolerance_for_identification': $( if [ ! -z ${VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION+x} ]; then echo "float('${VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_IDENTIFICATION//\'/\\\'}')"; else echo None; fi ),
        'retention_index_tolerance_for_identification': $( if [ ! -z ${VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION+x} ]; then echo "int('${VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_IDENTIFICATION//\'/\\\'}')"; else echo None; fi ),
        'ei_similarity_tolerance_for_identification': $( if [ ! -z ${VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION+x} ]; then echo "int('${VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_IDENTIFICATION//\'/\\\'}')"; else echo None; fi ),
        'identification_score_cutoff': $( if [ ! -z ${VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF+x} ]; then echo "int('${VIASH_PAR_IDENTIFICATION_SCORE_CUTOFF//\'/\\\'}')"; else echo None; fi ),
        'alignment_index_type': $( if [ ! -z ${VIASH_PAR_ALIGNMENT_INDEX_TYPE+x} ]; then echo "'${VIASH_PAR_ALIGNMENT_INDEX_TYPE//\'/\\\'}'"; else echo None; fi ),
        'retention_time_tolerance_for_alignment': $( if [ ! -z ${VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT+x} ]; then echo "float('${VIASH_PAR_RETENTION_TIME_TOLERANCE_FOR_ALIGNMENT//\'/\\\'}')"; else echo None; fi ),
        'retention_index_tolerance_for_alignment': $( if [ ! -z ${VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT+x} ]; then echo "int('${VIASH_PAR_RETENTION_INDEX_TOLERANCE_FOR_ALIGNMENT//\'/\\\'}')"; else echo None; fi ),
        'ei_similarity_tolerance_for_alignment': $( if [ ! -z ${VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT+x} ]; then echo "int('${VIASH_PAR_EI_SIMILARITY_TOLERANCE_FOR_ALIGNMENT//\'/\\\'}')"; else echo None; fi ),
        'retention_time_factor_for_alignment': $( if [ ! -z ${VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT+x} ]; then echo "float('${VIASH_PAR_RETENTION_TIME_FACTOR_FOR_ALIGNMENT//\'/\\\'}')"; else echo None; fi ),
        'ei_similarity_factor_for_alignment': $( if [ ! -z ${VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT+x} ]; then echo "float('${VIASH_PAR_EI_SIMILARITY_FACTOR_FOR_ALIGNMENT//\'/\\\'}')"; else echo None; fi ),
        'peak_count_filter': $( if [ ! -z ${VIASH_PAR_PEAK_COUNT_FILTER+x} ]; then echo "int('${VIASH_PAR_PEAK_COUNT_FILTER//\'/\\\'}')"; else echo None; fi ),
        'qc_at_least_filter': $( if [ ! -z ${VIASH_PAR_QC_AT_LEAST_FILTER+x} ]; then echo "'${VIASH_PAR_QC_AT_LEAST_FILTER//\'/\\\'}'.lower() == 'true'"; else echo None; fi )
      }
      meta = {
        'functionality_name': '$VIASH_META_FUNCTIONALITY_NAME',
        'resources_dir': '$VIASH_META_RESOURCES_DIR',
        'temp_dir': '$VIASH_TEMP'
      }
      
      resources_dir = '$VIASH_META_RESOURCES_DIR'
      
      ## VIASH END
      
      assert len(par["input"]) > 0, "Need to specify at least one --input."
      is_dir = [ os.path.isdir(file) for file in par["input"] ]
      
      if len(par["input"]) > 1:   
         assert not any(is_dir), "Either pass to --input a single directory or a set of files."
      
      dir_mode=all(is_dir)
      
      # Create params file
      param_file = os.path.join(par["output"], "params.txt")
      ri_index_file = os.path.join(par["output"], "ri_index_paths.txt")
      
      param_content = f"""# Data type
      Data type: {par["data_type"]}
      Ion mode: {par["ion_mode"]}
      Accuracy type: {par["accuracy_type"]}
      
      # Data collection parameters
      Retention time begin: {par["retention_time_begin"]}
      Retention time end: {par["retention_time_end"]}
      Mass range begin: {par["mass_range_begin"]}
      Mass range end: {par["mass_range_end"]}
      
      # Peak detection parameters
      Smoothing method: {par["smoothing_method"]}
      Smoothing level: {par["smoothing_level"]}
      Average peak width: {par["average_peak_width"]}
      Minimum peak height: {par["minimum_peak_height"]}
      Mass slice width: {par["mass_slice_width"]}
      Mass accuracy: {par["mass_accuracy"]}
      
      # MS1Dec parameters
      Sigma window value: {par["sigma_window_value"]}
      Amplitude cut off: {par["amplitude_cutoff"]}
      
      # Identification
      {"MSP file: " + par["msp_file"] if par["msp_file"] else "# MSP file: none"}
      {"RI index file pathes: " + ri_index_file if par["ri_index_file"] else "# RI index file pathes: none"}
      Retention type: {par["retention_type"]}
      RI compound: {par["ri_compound"]}
      Retention time tolerance for identification: {par["retention_time_tolerance_for_identification"]}
      Retention index tolerance for identification: {par["retention_index_tolerance_for_identification"]}
      EI similarity tolerance for identification: {par["ei_similarity_tolerance_for_identification"]}
      Identification score cut off: {par["identification_score_cutoff"]}
      
      # Alignment parameters setting
      Alignment index type: {par["alignment_index_type"]}
      Retention time tolerance for alignment: {par["retention_time_tolerance_for_alignment"]}
      Retention index tolerance for alignment: {par["retention_index_tolerance_for_alignment"]}
      EI similarity tolerance for alignment: {par["ei_similarity_tolerance_for_alignment"]}
      Retention time factor for alignment: {par["retention_time_factor_for_alignment"]}
      EI similarity factor for alignment: {par["ei_similarity_factor_for_alignment"]}
      Peak count filter: {par["peak_count_filter"]}
      QC at least filter: {par["qc_at_least_filter"]}
      """
      
      with tempfile.TemporaryDirectory() as temp_dir:
         # copy input files to tempdir
         # because MSDial otherwise generates a lot
         # of temporary files in the input dir.
         if dir_mode:
            shutil.copytree(par["input"][0], temp_dir, dirs_exist_ok=True)
         else:
            for file in par["input"]:
               dest = os.path.join(temp_dir, os.path.basename(file))
               print(f"Copying {file} to {dest}")
               shutil.copyfile(file, dest)
      
         # create output dir if not exists
         if not os.path.exists(par["output"]):
            os.makedirs(par["output"])
         
         # create ri index file paths file
         # (if needed)
         if par["ri_index_file"]:
            with open(ri_index_file, 'w') as out_file:
               tsv_writer = csv.writer(out_file, delimiter="\\t")
      
               for top, dirs, files in os.walk(temp_dir):
                  input_files = [ os.path.join(top, file) for file in files if re.match('.*\\.(abf|cdf|mzml|ibf|wiff|wiff2|raw|d)\$', file)]
                  tsv_writer.writerows([[file, par["ri_index_file"]] for file in input_files])
      
         # write params file
         with open(param_file, "w") as f:
            f.write(param_content)
      
         # run msdial
         p = subprocess.Popen(
            [
               f"{msdial_path}/MsdialConsoleApp", 
               "gcms", 
               "-i", temp_dir,
               "-o", par["output"],
               "-m", param_file,
               "-p"
            ]
         )
         p.wait()
      
      if p.returncode != 0:
         raise Exception(f"MS-DIAL finished with exit code {p.returncode}") 
      VIASHMAIN
      python "\$tempscript" &
      wait "\$!"
      
      VIASHEOF
      

    dest: "msdial_gcms"
    is_executable: true
  tests:
  - type: "bash_script"
    path: "run_test.sh"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/msdial_demo_files/raw/GCMS"
  info: {}
  dummy_arguments: []
  set_wd_to_resources_dir: false
  enabled: true
platform:
  type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "czbiohub/mspipelines"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  privileged: false
  run_args: []
  target_image_source: "https://github.com/czbiohub/mspipelines"
  setup:
  - type: "apt"
    packages:
    - "libnetcdf-dev"
    interactive: false
  - type: "docker"
    resources: []
    label: []
    add: []
    copy: []
    run:
    - "mkdir /tmp/msdial && cd /tmp/msdial && wget -q https://www.dropbox.com/s/dx5fakz4sy2xgha/MSDIAL%20build%20Linux.zip?dl=1\
      \ -O \"msdial.zip\" && unzip \"msdial.zip\" -d /msdial && rm -rf /tmp/msdial\
      \ && chmod +x /msdial/MsdialConsoleApp"
    build_args: []
    env: []
  - type: "python"
    user: false
    packages: []
    pip: []
    pypi:
    - "pandas"
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
platforms: []
info:
  config: "src/msdial/msdial_gcms/config.vsh.yaml"
  platform: "docker"
  output: "target/docker/msdial/msdial_gcms"
  executable: "target/docker/msdial/msdial_gcms/msdial_gcms"
  viash_version: "0.5.13"
  git_commit: "65f07e027d6237818a16ccc7c0c9ff56df3c5e53"
  git_remote: "https://github.com/czbiohub/mspipelines"
